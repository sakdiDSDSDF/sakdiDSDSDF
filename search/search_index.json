{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9996\u9875","text":"<p>\u4f60\u5c06\u6d6a\u8d39\u4e00\u79d2\u949f\u6765\u770b\u8fd9\u53e5\u8bdd\u3002</p> <p>\u7136\u540e\u4f60\u5c06\u6d6a\u8d39\u66f4\u591a\u65f6\u95f4\u6765\u770b\u6211\u7684\u535a\u5ba2\u5185\u5bb9\u3002</p>"},{"location":"daily/2025/0330/","title":"3\u670830\u65e5","text":"<pre><code>git add .\ngit commit -m \".\"\ngit push\n</code></pre> <p>CF_1014_C\u9898</p> <p>\u9898\u610f\u4e3a\u53d6\u6570\u7ec4\u4e2d\u548c\u4e3a\u5947\u6570\u7684\u4e24\u4e2a\u6570\u8fdb\u884c\u4e00\u4e2a\u52a0\u4e00\uff0c\u4e00\u4e2a\u51cf\u4e00\u7684\u64cd\u4f5c\uff0c\u6700\u540e\u4f7f\u5f97\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u5c3d\u53ef\u80fd\u7684\u5927\u3002 \u56e0\u4e3a\u8fd9\u9053\u9898\u76ee\u6700\u540e\u8f93\u51fa\u7684\u7b54\u6848\u4e00\u5b9a\u4e3a\u5947\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u5f00\u59cb\u7684\u65f6\u5019\u9009\u62e9\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u5076\u6570\uff0c\u5e76\u5c06\u5176\u4ed6\u7684\u5076\u6570\u5168\u90e8\u52a0\u5230\u6240\u9009\u62e9\u7684\u6570\u4e0a\u6765\uff0c\u5f97\u5230\u4e00\u4e2a\u6700\u5927\u7684\u5076\u6570\uff0c\u6b64\u65f6\u6570\u7ec4\u91cc\u5c06\u5269\u4e0b\u8fd9\u4e00\u4e2a\u5076\u6570\u548c\u5176\u4ed6\u6240\u6709\u5947\u6570\uff0c\u4e3a\u4e86\u5c3d\u53ef\u80fd\u7684\u8ba9\u5076\u6570\u53d8\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u5076\u6570\u5438\u6536\u5176\u4ed6\u7684\u5947\u6570\u4f46\u662f\u75591\uff0c\u8fd9\u6837\u5076\u6570\u4e0d\u4f1a\u53d1\u751f\u5947\u5076\u8f6c\u53d8\uff0c\u4e14\u6211\u4eec\u7684\u64cd\u4f5c\u662f\u4e00\u76f4\u7b26\u5408\u9898\u610f\u7684\uff0c\u6700\u540e\u6570\u7ec4\u5c06\u5269\u4e0b\u4e00\u4e2a\u5076\u6570\u548c\u5f88\u591a1\uff0c\u6211\u4eec\u5c06\u5076\u6570\u52a0\u4e00\u5c31\u662f\u7b54\u6848\u3002</p> <p>CF_1014_B\u9898</p> <p>\u9898\u610f\u4e3a\u901a\u8fc7\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u5f62\u5f0f\u4f7f\u5f97\u4e00\u4e2a\u5b57\u7b26\u4e32\u5168\u4e3a0\uff0c\u66ff\u6362\u65b9\u5f0f\u4e3a swap(\\(a_i\\), \\(b_{i-1}\\))\u6216\u8005swap(\\(b_i\\), \\(a_{i-1}\\)) \u3002</p> <p>\u636e\u89c2\u5bdf\u53ef\u4ee5\u77e5\u9053\u5b57\u7b26\u4e32\u4e2d\u76841\u53ea\u80fd\u4ee5\u6ce2\u6d6a\u5f62\u79fb\u52a8\uff0c\u4e3a\u4e86\u8ba9a\u4e2d\u76841\u80fd\u88ab\u66ff\u6362\u4e3a0\uff0c\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1\u5f53a\u76841\u5728\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\u5728b\u4e2d\u67090\u5b58\u5728\uff0c\u624d\u80fd\u8ba9a\u76841\u88ab\u66ff\u6362\u4e3a0\u3002\u6240\u4ee5\u89e3\u9898\u601d\u8def\u4e3a\u904d\u5386a\u5b57\u7b26\u4e32\uff0c\u5f53\u9047\u52301\u7684\u65f6\u5019\u8bb0\u5f551\u4e0b\u6807\u7684\u5947\u5076\u6027\uff0c\u7136\u540e\u904d\u5386b\u5b57\u7b26\u4e32\u4e0e\u5176\u76f8\u53cd\u5947\u5076\u6027\u7684\u4f4d\u7f6e\u770b\u6709\u6ca1\u67090\uff0c\u540c\u65f6\u66f4\u6539\u5b57\u7b26</p>"},{"location":"daily/2025/0331/","title":"3\u670831\u65e5","text":""},{"location":"daily/2025/0331/#01","title":"01\u80cc\u5305\u95ee\u9898","text":"<p>\u4eca\u5929\u770b\u4e86\u770b\u5165\u95e8\u7ea7\u522b\u7684\u80cc\u5305\u95ee\u9898\uff0c\u53ea\u770b\u4e8601\u80cc\u5305\u95ee\u9898\uff0c\u6ca1\u5b66\u5b8c\u5168\u80cc\u5305\u95ee\u9898\uff0c\u5199\u4e86\u4e09\u4e2a\u9898\u76ee\uff0c\u90fd\u662f\u5165\u95e8\u7ea7\u522b\u7684\u9898\u76ee\u3002</p> <p>https://www.luogu.com.cn/problem/P1048</p> <p>https://www.luogu.com.cn/problem/P1049</p> <p>https://www.luogu.com.cn/problem/P1060</p> <p>\u80cc\u5305\u95ee\u9898\u7684\u53d8\u91cf\u4e3b\u8981\u662f\u80cc\u5305\u7684\u6700\u5927\u5bb9\u91cf\uff0c\u7269\u54c1\u7684\u6570\u91cf\u4ee5\u53ca\u7269\u54c1\u7684\u4ef7\u503c\uff0c</p> <p>\u572801\u80cc\u5305\u9898\u76ee\u4e2d\uff0c\u7269\u54c1\u4e0d\u4f1a\u88ab\u91cd\u590d\u9009\u53d6\uff0c\u8fd9\u4e5f\u662f\u5b83\u548c\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u7684\u4e3b\u8981\u533a\u522b\u3002</p> <p>01\u80cc\u5305\u95ee\u9898\u7684\u5927\u81f4\u89e3\u9898\u601d\u8def\u4e3a\uff0c\u4f7f\u7528\u53cc\u91cdfor\u5faa\u73af\uff0c\u5916\u5c42\u5faa\u73af\u904d\u5386\u7269\u54c1\uff0c\u5185\u5c42\u5faa\u73af\u904d\u5386\u80cc\u5305\u7684\u5bb9\u91cf\uff0c\u7269\u54c1\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u904d\u5386\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u7269\u54c1\u7ed3\u675f\uff0c\u80cc\u5305\u7684\u5bb9\u91cf\u4ece\u96f6\u5f00\u59cb\u904d\u5386\uff0c\u5230\u80cc\u5305\u7684\u6700\u5927\u5bb9\u91cf\u4e3a\u6b62\u3002</p> <pre><code>dp[i][j]=max(dp[i-1][j-weight[i]]+value[i],dp[i-1][j]);\n</code></pre> <p>\u800c\u8fd9\u4e2a\u4e3a01\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8ba9\u6211\u4eec\u6765\u8be6\u7ec6\u7406\u89e3\u8fd9\u4e2a\u65b9\u7a0b\u3002</p> <p>\u9996\u5148\u8fd9\u4e2a\u65b9\u7a0b\u6210\u7acb\u7684\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u80fd\u88ab\u4f7f\u7528\u7684\u524d\u63d0\u5c31\u662f\u2014\u2014\u5f53\u524d\u9009\u62e9\u7684\u7269\u54c1\u7684\u91cd\u91cf\u662f\u5426\u8d85\u51fa\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\uff0c\u662f\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\uff0c\u4e0d\u662f\u6700\u5927\u5bb9\u91cf\uff0c\u4e5f\u4e0d\u662f\u5269\u4f59\u5bb9\u91cf\u3002\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u90a3\u5c31\u8bf4\u660e\u8fd9\u4e2a\u7269\u54c1\u662f\u53ef\u4ee5\u88ab\u653e\u8fdb\u80cc\u5305\u7684\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u4e5f\u5c31\u53ef\u4ee5\u88ab\u4f7f\u7528\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u6211\u4eec\u65e2\u7136\u53ef\u4ee5\u5c06\u8be5\u7269\u54c1\u653e\u5165\u80cc\u5305\uff0c\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u653e\u5165\u540e\u6211\u4eec\u80fd\u5426\u8ba9\u80cc\u5305\u4e2d\u7269\u54c1\u7684\u603b\u4ef7\u503c\u53d8\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2amax\u51fd\u6570\u6765\u5224\u65ad\u653e\u5165\u548c\u4e0d\u653e\u5165\u7684\u4ef7\u503c\u5927\u5c0f\uff0c\u5de6\u8fb9\u4e3a\u653e\u5165\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u53f3\u8fb9\u4e3a\u4e0d\u653e\u5165\u3002</p> <p>\u5148\u6765\u8bf4\u8bf4\u5de6\u8fb9\uff0c\u65e2\u7136\u6211\u4eec\u9009\u62e9\u653e\u5165\uff0c\u6b64\u65f6\u80cc\u5305\u7684\u603b\u4ef7\u503c\u5c31\u7b49\u4e8e</p> <pre><code>dp[i-1][j-weight[i]]+value[i]]\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u7b2c\u4e00\u4e2a\u4e0b\u6807\u662fi-1\u5462\uff0c\u56e0\u4e3a\u6211\u4eec\u65e2\u7136\u8981\u653e\u5f53\u524d\u7269\u54c1\uff0c\u4e3a\u4e86\u8ba1\u7b97\u80cc\u5305\u4ef7\u503c\uff0c\u5fc5\u7136\u9700\u8981\u524d\u4e00\u4e2a\u7269\u54c1\u653e\u5165\u540e\u7684\u80cc\u5305\u60c5\u51b5\uff0c\u6240\u4ee5\u662fi-1\u3002</p> <p>\u7136\u540e\u662f\u7b2c\u4e8c\u4e2a\u4e0b\u6807\uff0c\u6211\u89c9\u5f97\u80cc\u5305\u95ee\u9898\u6700\u96be\u7406\u89e3\u7684\u90e8\u5206\uff0c\u4e3a\u4ec0\u4e48\u662f\u76ee\u524d\u7684\u80cc\u5305\u5bb9\u91cf\u51cf\u53bb\u8fd9\u4e2a\u7269\u54c1\u7684\u91cd\u91cf\u5462\uff1f \u6211\u662f\u8fd9\u6837\u7406\u89e3\u7684\u2014\u2014\u4f60\u65e2\u7136\u9009\u62e9\u653e\u5165\u8fd9\u4e2a\u7269\u54c1\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u4e24\u79cd\u53ef\u80fd\uff0c\u4e00\u79cd\u662f\u76ee\u524d\u80cc\u5305\u7684\u5bb9\u91cf\u5728\u4f60\u653e\u5165\u8fd9\u4e2a\u7269\u54c1\u540e\uff0c\u4ecd\u80fd\u652f\u6301\u4f60\u4e0a\u4e00\u4e2a\u653e\u7684\u7269\u54c1\u5728\u91cc\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u8d85\u51fa\uff0c\u7b2c\u4e8c\u79cd\u5c31\u662f\u76ee\u524d\u80cc\u5305\u7684\u5bb9\u91cf\u5728\u4f60\u653e\u5165\u8fd9\u4e2a\u7269\u54c1\u540e\uff0c\u4e0d\u80fd\u5c06\u4e0a\u4e00\u4e2a\u7269\u54c1\u518d\u7559\u5728\u91cc\u9762\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u505a\u51fa\u53d6\u820d\u3002\uff01\uff01\uff01\uff01\uff01\u6240\u4ee5\u8fd9\u4e2a\u76f8\u51cf\u7684\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u5f97\u51fa\u653e\u5165\u6b64\u65f6\u7684\u7269\u54c1\u540e\u80cc\u5305\u7684\u5269\u4f59\u7a7a\u95f4\uff0c\u770b\u5176\u4e0e\u4e0a\u4e00\u4e2a\u7269\u54c1\u91cd\u91cf\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5982\u679c\u5269\u4f59\u7a7a\u95f4\u5927\uff0c\u5c31\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u53cd\u4e4b\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\u8bf4\u7b80\u5355\u70b9\uff0c\u8fd9\u4e2a\u76f8\u51cf\u7684\u4f5c\u7528\u5c31\u662f\u7528\u6765\u5224\u65ad\u662f\u9009\u5f53\u524d\u7684\u7269\u54c1\u66f4\u597d\u8fd8\u662f\u9009\u4e0a\u4e00\u4e2a\u7269\u54c1\u66f4\u597d\uff0c\u5f53\u7136\u8fd9\u90fd\u662f\u5efa\u7acb\u5728\u5269\u4f59\u7a7a\u95f4\u6bd4\u80cc\u5305\u76ee\u524d\u5bb9\u91cf\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c \u5982\u679c\u5927\u90a3\u80af\u5b9a\u90fd\u62ff\u4e86\u3002</p> <pre><code>dp[i-1][j]\n</code></pre> <p>\u7136\u540e\u518d\u6765\u770b\u770b\u53f3\u8fb9\uff0c\u5176\u5b9e\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u4e0e\u4e0a\u4e00\u4e2a\u7269\u54c1\u653e\u5165\u65f6\u7684\u80cc\u5305\u4ef7\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5de6\u8fb9\u7684\u7b2c\u4e8c\u4e2a\u4e0b\u6807\u6700\u540e\u5927\u4e8e\u53f3\u8fb9\u7684\u7b2c\u4e8c\u4e2a\u4e0b\u6807\uff0c\u90a3\u80af\u5b9a\u662f\u5de6\u8fb9\u66f4\u4f18\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u8fd9\u4e2amax\u5c31\u80fd\u6bd4\uff0c\u4f46\u5982\u679c\u5c0f\u4e8e\u4e86\u5c31\u9700\u8981max\u6765\u5224\u65ad\u4e86\u3002</p> <p>\u81f3\u6b64\uff0c\u975e\u5e38\u7b80\u5355\u5730\u5bf901\u80cc\u5305\u95ee\u9898\u8fdb\u884c\u4e86\u63cf\u8ff0\uff0c\u4ee5\u540e\u6709\u66f4\u6df1\u66f4\u6b63\u786e\u7684\u7406\u89e3\u4f1a\u8fdb\u884c\u4fee\u6539\u3002</p>"},{"location":"daily/2025/0402/","title":"4\u67082\u65e5","text":""},{"location":"daily/2025/0402/#_1","title":"\u8fea\u6770\u65af\u7279\u62c9","text":"<p>\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u6bcf\u6b21\u9009\u62e9\u5f53\u524d\u80fd\u9009\u62e9\u7684\u6743\u503c\u6700\u5c0f\u7684\u70b9\uff0c\u7136\u540e\u627e\u5b83\u7684\u90bb\u63a5\u70b9\uff0c\u4ece\u90bb\u63a5\u70b9\u91cc\u63a5\u7740\u627e\u6700\u5c0f\u7684\uff0c\u5faa\u73af\u4e0b\u53bb\uff0c\u76f4\u5230\u6240\u6709\u70b9\u7684\u6700\u5c0f\u503c\u90fd\u5df2\u7ecf\u786e\u7acb</p> <p>https://atcoder.jp/contests/abc362/tasks/abc362_d</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define INF 1061109567\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n    vector&lt;ll&gt; a(n);\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;a[i];\n    }\n    vector&lt;ll&gt; b(m),u(m),v(m);\n    for(int i=0;i&lt;m;i++){\n        cin&gt;&gt;u[i]&gt;&gt;v[i]&gt;&gt;b[i];\n        u[i]--,v[i]--;\n    }\n    vector&lt;vector&lt;pair&lt;ll,ll&gt;&gt;&gt; table(n);\n    for(int i=0;i&lt;m;i++){\n        table[u[i]].pb({v[i],b[i]});\n        table[v[i]].pb({u[i],b[i]});\n    }\n    priority_queue&lt;pair&lt;ll,ll&gt;,vector&lt;pair&lt;ll,ll&gt;&gt;,greater&lt;pair&lt;ll,ll&gt;&gt;&gt; pq;\n    vector&lt;ll&gt; dist(n,1e18);\n    dist[0]=a[0];\n    pq.push({dist[0],0});\n    while(!pq.empty()){\n        auto[d,u]=pq.top();\n        pq.pop();\n        if(d&gt;dist[u]) continue;\n        for(auto x:table[u]){\n            ll v=x.first;\n            ll newdis=x.second+dist[u]+a[v];\n            if(newdis&lt;dist[v]){\n                dist[v]=newdis;\n                pq.push({newdis,v});\n            }\n        }\n    }\n    for(int i=1;i&lt;n;i++){\n        cout&lt;&lt;dist[i]&lt;&lt;\" \";\n    }\n    cout&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>https://www.luogu.com.cn/problem/P4779</p> <p>https://www.luogu.com.cn/problem/P3905</p> <p>\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\u6ce8\u610f\u4e8b\u9879</p> <p>\u7b2c\u4e00\u662f\u5bf9\u4e8e\u65e0\u5411\u56fe\uff0c\u6211\u4eec\u5728\u90bb\u63a5\u8868\u5b58\u56fe\u7684\u65f6\u5019\u8981\u53cc\u5411\u5b58\u5165\uff0c1\u52302\u5b58\u4e00\u904d\uff0c2\u52301\u4e5f\u8981\u5b58\u4e00\u904d</p> <p>\u7b2c\u4e8c\u662f\u5728\u521b\u7acbdist\u6570\u7ec4\u5b58\u7b54\u6848\u7684\u65f6\u5019\uff0c\u8981\u5148\u5c06\u5176\u5185\u7684\u5143\u7d20\u8d4b\u503c\u4e3a\u4e00\u4e2a\u5f88\u5927\u7684\u6570\uff0c\u518d\u5bf9\u8d77\u70b9\u8fdb\u884c\u5355\u72ec\u8d4b\u503c\uff0c\u5982\u679c\u6709\u70b9\u6743\uff0c\u8d77\u70b9\u8d4b\u503c\u4e3a\u70b9\u6743\uff0c\u5426\u5219\u4e3a0</p> <p>\u7b2c\u4e09\u662f\u5728\u7b97\u6cd5\u7684\u6838\u5fc3\u90e8\u5206\u5f53\u73b0\u5728\u6240\u9009\u62e9\u7684\u70b9\u662f\u6700\u5c0f\u503c\u8fdb\u5165\u627e\u90bb\u8fb9\u548c\u90bb\u70b9\u7684\u65f6\u5019\uff0c\u5230\u90bb\u63a5\u70b9\u7684\u6743\u503c\u5728\u8d4b\u503c\u65f6\u52a0\u7684\u662f\u4e4b\u524d\u8def\u5f84\u7684\u6743\u503c\u548c\uff0c\u5373dist[u]</p>"},{"location":"daily/2025/0404/","title":"4\u67084\u65e5","text":""},{"location":"daily/2025/0404/#educational-codeforces-round-177-rated-for-div-2","title":"Educational Codeforces Round 177 (Rated for Div. 2)","text":""},{"location":"daily/2025/0404/#a","title":"A","text":"<p>https://codeforces.com/contest/2086/problem/A</p> <p>\u9898\u76ee\u7ed9\u51fa\u7684\u8f93\u5165\u662f\u679c\u9171\u7f50\u6570\uff0c\u7531\u6b64\u5f97\u51fa\u679c\u9171\u6570\u4f4d3n\uff0c\u56e0\u4e3a\u4e24\u79cd\u539f\u6599\u670925\uff05\u7684\u635f\u8017\uff0c\u6240\u4ee5\u662f2n+2n\uff0c\u6240\u4ee5\u5176\u4e2d\u4e00\u79cd\u539f\u6599\u7684\u9700\u6c42\u4e3a2n</p> <pre><code>int main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        ll n;\n        cin&gt;&gt;n;\n        cout&lt;&lt;2*n&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"daily/2025/0404/#b","title":"B","text":"<p>https://codeforces.com/contest/2086/problem/B</p> <p>\u8fd9\u9053\u9898\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u6700\u540e\u4e00\u4e2aL\u7684\u4f4d\u7f6e\u5c31\u80fd\u5f97\u51fa\u7b54\u6848\uff0c\u56e0\u4e3a\u524d\u9762\u7684L\u6700\u540e\u52a0\u8d77\u6765\u7684\u548c\u4e00\u5b9a\u6bd4\u6700\u540e\u4e00\u4e2a\u5927\u3002</p> <p>1.\u9996\u5148\u5224\u65ad\u4e00\u4e0b\u5355\u4e2a\u6570\u7ec4\u7684\u548c\u662f\u5426\u5927\u4e8ex\uff0c\u5982\u679c\u5927\u4e8e\u5219\u8bf4\u660e\u76f4\u5230\u6269\u5145\u540e\u7684\u5012\u6570\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u91cc\u7684\u6240\u6709\u4f4d\u7f6e\u90fd\u6ee1\u8db3L\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u76f4\u63a5\u770b\u539f\u6570\u7ec4\u4ece\u5c3e\u5411\u5934\u52a0\uff0c\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ex\u7684\u4f4d\u7f6e\u5c31\u662f\u6700\u540e\u4e00\u4e2aL\uff0c\u76f4\u63a5\u8f93\u51fan*k-(n-i)</p> <p>2.\u5982\u679c\u5355\u4e2a\u6570\u7ec4\u548c\u5c0f\u4e8ex\uff0c\u6211\u4eec\u9700\u8981\u5224\u65ad\u4e00\u4e0bx\u7684\u8303\u56f4\u5185\u80fd\u5bb9\u7eb3\u591a\u5c11\u4e2a\u539f\u6570\u7ec4\uff0c\u5982\u679cx%sum=0\uff0c\u5219\u8bf4\u660e\u957f\u5ea6\u4e3ax\u7684\u533a\u95f4\u6070\u597d\u80fd\u5bb9\u7eb3x/sum\u4e2a\u539f\u6570\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u88ab\u5bb9\u7eb3\u7684\u6570\u7ec4\u7684\u7b2c\u4e00\u4f4d\u5c31\u662f\u6700\u540e\u4e00\u4e2aL\u3002\u5982\u679c\u4e0d\u80fd\u6574\u9664\uff0c\u5219\u53bb\u539f\u6570\u7ec4\u91cc\u901a\u8fc7\u60c5\u51b51\u7684\u529e\u6cd5\u53bb\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ex%sum\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u540c\u7406\u8f93\u51fa\u3002</p> <pre><code>int main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        ll n,k,x;\n        cin&gt;&gt;n&gt;&gt;k&gt;&gt;x;\n        vector&lt;ll&gt; a(n+1);\n        ll sum=0;\n        for(int i=1;i&lt;=n;i++){\n            cin&gt;&gt;a[i];\n            sum+=a[i];\n        }\n        if(sum*k&lt;x){\n            cout&lt;&lt;0&lt;&lt;endl;\n            continue;\n        }\n        if(sum&gt;=x){\n            ll sum1=0;\n            for(int i=n;i&gt;=1;i--){\n                sum1+=a[i];\n                if(sum1&gt;=x){\n                    cout&lt;&lt;n*k-(n-i)&lt;&lt;endl;\n                    break;\n                }\n            }\n        }\n        else{\n            ll temp=x%sum,num=x/sum;\n            if(temp==0){\n                cout&lt;&lt;n*k-n*num+1&lt;&lt;endl;\n            }\n            else{\n                ll sum2=0;\n                for(int i=n;i&gt;=1;i--){\n                    sum2+=a[i];\n                    if(sum2&gt;=temp){\n                        cout&lt;&lt;n*k-n*num-(n-i)&lt;&lt;endl;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"daily/2025/0404/#httpswwwluogucomcnproblemp1541","title":"https://www.luogu.com.cn/problem/P1541","text":"<p>\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u521d\u770b\u50cf\u8d2a\u5fc3\uff0c\u4f46\u8d2a\u5fc3\u7684\u7b56\u7565\u662f\u6bcf\u6b21\u90fd\u9009\u62e9\u6700\u4f18\u7684\u4ee5\u8fbe\u5230\u6700\u540e\u7684\u5168\u5c40\u6700\u4f18\uff0c\u4f46\u8fd9\u9053\u9898\u6211\u4eec\u5982\u679c\u8fd9\u6837\u8d2a\u5fc3\u7684\u8bdd\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u4e3a\u4e86\u62ff\u4e00\u4e2a\u201c\u897f\u74dc\u201d\u4e22\u4e86\u5f88\u591a\u7684\u201c\u829d\u9ebb\u201d\uff0c\u660e\u660e\u662f\u53ef\u4ee5\u90fd\u62ff\u7684\uff0c\u6240\u6709\u6211\u4eec\u91c7\u7528\u52a8\u6001\u89c4\u5212\u7684\u7b56\u7565\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u3002</p> <p>\u5bf9\u4e8e\u8d70\u7684\u6bcf\u4e00\u6b65\u6211\u4eec\u90fd\u548c\u5b83\u4e4b\u524d\u7684\u72b6\u6001\u6765\u6bd4\u8f83\uff0c\u5224\u65ad\u662f\u5426\u8fbe\u5230\u8fd9\u4e00\u6b65\u7684\u6700\u4f18\uff0c\u56e0\u4e3a\u52a8\u6001\u89c4\u5212\u662f\u5e26\u6709\u8bb0\u5fc6\u5316\u7684\uff0c\u5373\u6bcf\u4e00\u6b65\u7684\u7ed3\u679c\u6211\u4eec\u90fd\u662f\u4f1a\u8bb0\u5f55\u7684\uff0c\u5982\u679c\u5f53\u524d\u7684\u64cd\u4f5c\u4f1a\u4f7f\u67d0\u4e00\u6b65\u539f\u672c\u7684\u64cd\u4f5c\u66f4\u4f18\uff0c\u6211\u4eec\u5c31\u66f4\u65b0\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u76ee\uff0c\u72b6\u6001\u8f6c\u6362\u65b9\u7a0b\u4e3a</p> <pre><code>if(k4) dp[k1][k2][k3][k4]=max(dp[k1][k2][k3][k4],dp[k1][k2][k3][k4-1]+a[pos]);\n                    if(k3) dp[k1][k2][k3][k4]=max(dp[k1][k2][k3][k4],dp[k1][k2][k3-1][k4]+a[pos]);\n                    if(k2) dp[k1][k2][k3][k4]=max(dp[k1][k2][k3][k4],dp[k1][k2-1][k3][k4]+a[pos]);\n                    if(k1) dp[k1][k2][k3][k4]=max(dp[k1][k2][k3][k4],dp[k1-1][k2][k3][k4]+a[pos]);\n</code></pre> <p>\u5176\u4e2ddp\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u9879\u5c31\u4ee3\u8868\u7279\u5b9a\u6b65\u6570\u7684\u5361\u7528\u4e86\u51e0\u5f20\uff0cpos\u4e3a\u6211\u4eec\u5f53\u524d\u5728\u9898\u76ee\u4e2d\u7684\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002</p> <p>\u6211\u4eec\u5c06\u603b\u95ee\u9898\u62c6\u5206\u4e3a\u4e00\u4e2a\u4e2a\u5c0f\u95ee\u9898\uff0c\u5bfb\u6c42\u5c0f\u95ee\u9898\u4e0a\u7684\u6700\u4f18\u89e3\uff0c\u5230\u6700\u540e\u603b\u95ee\u9898\u5f97\u5230\u7684\u7b54\u6848\u4e5f\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\u7684\uff0c\u5373\u9012\u63a8\u3002</p> <pre><code>int dp[45][45][45][45];\nint main(){\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n    vector&lt;int&gt; a(n);\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;a[i];\n    }\n    vector&lt;int&gt; b(m);\n    int s1=0,s2=0,s3=0,s4=0;\n    for(int i=0;i&lt;m;i++){\n        cin&gt;&gt;b[i];\n        if(b[i]==1) s1++;\n        else if(b[i]==2) s2++;\n        else if(b[i]==3) s3++;\n        else s4++;\n    }\n    dp[0][0][0][0]=a[0];\n    for(int k1=0;k1&lt;=s1;k1++){\n        for(int k2=0;k2&lt;=s2;k2++){\n            for(int k3=0;k3&lt;=s3;k3++){\n                for(int k4=0;k4&lt;=s4;k4++){\n                    int pos=k1+2*k2+3*k3+4*k4;\n                    if(!pos) continue;\n                    if(k4) dp[k1][k2][k3][k4]=max(dp[k1][k2][k3][k4],dp[k1][k2][k3][k4-1]+a[pos]);\n                    if(k3) dp[k1][k2][k3][k4]=max(dp[k1][k2][k3][k4],dp[k1][k2][k3-1][k4]+a[pos]);\n                    if(k2) dp[k1][k2][k3][k4]=max(dp[k1][k2][k3][k4],dp[k1][k2-1][k3][k4]+a[pos]);\n                    if(k1) dp[k1][k2][k3][k4]=max(dp[k1][k2][k3][k4],dp[k1-1][k2][k3][k4]+a[pos]);\n                }\n            }\n        }\n    }\n    cout&lt;&lt;dp[s1][s2][s3][s4]&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"daily/2025/0406/","title":"4\u67086\u65e5","text":""},{"location":"daily/2025/0406/#teza-round-1-codeforces-round-1015-div-1-div-2","title":"Teza Round 1 (Codeforces Round 1015, Div. 1 + Div. 2)","text":""},{"location":"daily/2025/0406/#a","title":"A","text":"<p>https://codeforces.com/contest/2084/problem/A</p> <p>\u5148\u770b\u6837\u4f8b\u76f4\u63a5\u731c\u7ed3\u8bba\uff0cn\u4e3a\u5076\u6570\u4e0d\u53ef\u4ee5</p> <p>\u6839\u636e\u89c2\u5bdf\u548c\u6a21\u8fd0\u7b97\u7684\u7b80\u5355\u89c4\u5f8b\uff0c\u5373\u4e00\u4e2a\u5c0f\u7684\u6570\u6a21\u6bd4\u5b83\u5927\u7684\u6570\u6700\u7ec8\u7ed3\u679c\u7b49\u4e8e\u5c0f\u7684\u6570\u672c\u8eab\uff0c\u9664\u53bb\u8fd9\u4e00\u60c5\u51b5\u5916\uff0c\u8fd8\u6709\u4e00\u89c4\u5f8b\u4e3a\u4ece1\u5230n\u7684\u6240\u6709\u6570\u6a21\u4e00\u4e2a\u6570\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u6309\u71670\uff0c1\uff0c2......n-1\u7684\u5faa\u73af\u6765\u51fa\u73b0\u7684\u3002\u6839\u636e\u8fd9\u4e24\u4e2a\u89c4\u5f8b\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u6570\u7ec4\u6700\u5927\u7684\u6570\u653e\u5728\u7b2c\u4e00\u4f4d\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48n\u4e3a\u5076\u6570\u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u548c2\u6574\u9664\u4e86\uff0c\u8fd9\u6837\u5b83\u6a212\u6c38\u8fdc\u90fd\u662f1\uff0c\u7136\u540e\u5728\u6bcf\u4e00\u4f4d\u653e\u4e0a\u5f53\u524d\u4f4d\u6570-1\u7684\u6570\uff0c\u5373\u4ece1\u5f00\u59cb\u5230n-1\u5373\u53ef\u3002</p> <pre><code>int main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        int n;\n        cin&gt;&gt;n;\n        if(n%2==0){\n            cout&lt;&lt;-1&lt;&lt;endl;\n            continue;\n        }\n        else{\n            cout&lt;&lt;n&lt;&lt;\" \";\n            for(int i=1;i&lt;=n-1;i++){\n                cout&lt;&lt;i&lt;&lt;\" \";\n            }\n            cout&lt;&lt;endl;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"daily/2025/0406/#b","title":"B","text":"<p>https://codeforces.com/contest/2084/problem/B</p> <p>\u9996\u5148\u7ed9\u6570\u7ec4\u6392\u5e8f\uff0c\u8bb0\u5f55\u4e0b\u6570\u7ec4\u7684\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u8ba9\u7b2c\u4e00\u6bb5\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u7b49\u4e8e\u7b2c\u4e8c\u6bb5\u6570\u7ec4\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u7b2c\u4e8c\u6bb5\u6570\u7ec4\u91cc\u5fc5\u987b\u5168\u90e8\u653e\u6700\u5c0f\u503c\u7684\u500d\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u904d\u5386\u6570\u7ec4\uff0c\u627e\u5230\u80fd\u6574\u9664\u6700\u5c0f\u503c\u7684\u6570\u5e76\u65b0\u5efa\u4e00\u4e2a\u6570\u7ec4\u7528\u6765\u5b58\u50a8\uff0c\u7136\u540e\u6c42\u51fa\u65b0\u6570\u7ec4\u91cc\u6240\u6709\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u5982\u679c\u7b49\u4e8e\u6700\u5c0f\u503c\u5219\u505c\u6b62\u904d\u5386\u8f93\u51fa\u201cYES\u201d\uff0c\u5982\u679c\u6570\u7ec4\u904d\u5386\u5b8c\u4e86\u90fd\u6ca1\u6709\u8f93\u51fa\u201cYES\u201d\uff0c\u76f4\u63a5\u8f93\u51fa\"NO\"\u5373\u53ef</p> <pre><code>int main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        int n;\n        cin&gt;&gt;n;\n        vector&lt;ll&gt; a(n);\n        for(int i=0;i&lt;n;i++){\n            cin&gt;&gt;a[i];\n        }\n        sort(a.begin(),a.end());\n            ll mi=a[0];\n            bool check=false;\n            ll g=0;\n            for(int i=1;i&lt;n;i++){\n                if(a[i]%mi==0){\n                    g=__gcd(g,a[i]);\n                }\n                if(g==mi){\n                    check=true;\n                    cout&lt;&lt;\"yES\"&lt;&lt;'\\n';\n                    break;\n                }\n            }\n            if(!check) cout&lt;&lt;\"NO\"&lt;&lt;'\\n';\n    }\n    return 0;\n}\n</code></pre>"},{"location":"daily/2025/0409/","title":"4\u67089\u65e5","text":""},{"location":"daily/2025/0409/#codeforces-round-1016-div-3","title":"Codeforces Round 1016 (Div. 3)","text":""},{"location":"daily/2025/0409/#a","title":"A","text":"<p>\u770b\u6837\u4f8b\u76f4\u63a5\u731c\u51fa\u7b54\u6848</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#include&lt;bits/stdc++.h&gt;\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        int k;\n        cin&gt;&gt;k;\n        if(k%2==0) cout&lt;&lt;\"NO\"&lt;&lt;endl;\n        else cout&lt;&lt;\"YES\"&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"daily/2025/0409/#b","title":"B","text":"<p>\u9898\u610f\u662f\u4f60\u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u6570\u7684\u4efb\u610f\u6570\u4f4d\u4e0a\u7684\u6570\u5b57\uff0c\u7136\u540e\u8fd9\u4e2a\u6570\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u5373\u8fd9\u4e2a\u6570\u672c\u8eab\u9664\u4ee5\u6570\u4f4d\u4e4b\u548c\uff0c\u8981\u6c42\u4f60\u7528\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u8ba9\u8fd9\u4e2a\u6570\u7684\u4ee3\u4ef7\u6700\u5c0f\u3002</p> <p>\u9996\u5148\u53ef\u4ee5\u77e5\u9053\uff0c\u5bf9\u4e8e\u4efb\u4f55\u6570\uff0c\u6700\u5c0f\u7684\u4ee3\u4ef7\u4e00\u5b9a\u4e3a1\uff0c\u5373\u8fd9\u4e2a\u6570\u53d8\u6210\u96640\u4ee5\u5916\u7684\u4efb\u610f\u4e2a\u4f4d\u6570\uff0c\u518d\u52a0\u4e0a\u8fd9\u4e2a\u9898\u76ee\u5b58\u5728\u524d\u5bfc\u96f6\u673a\u5236\uff0c\u6240\u4ee5\u601d\u8def\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u6570\u4f4d\uff0c\u8981\u8ba9\u5b83\u524d\u9762\u76840\u7684\u6570\u91cf\u5c3d\u53ef\u80fd\u7684\u591a\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u6700\u7ec8\u7684\u89e3\u9898\u601d\u8def\u5c31\u662f\u53cd\u5411\u904d\u5386\u8fd9\u4e2a\u6570\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a0\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u540e\u7684\u6570\u5168\u90e8\u5220\u9664\uff0c\u524d\u9762\u7684\u6570\u9664\u4e860\u4ee5\u5916\u4e5f\u5168\u90e8\u5220\u9664\uff0c\u5f97\u5230\u7684\u5220\u9664\u6b21\u6570\u5c31\u662f\u7b54\u6848\u3002</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#include&lt;bits/stdc++.h&gt;\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        string s;\n        cin&gt;&gt;s;\n        int pos=0;\n        for(int i=s.size()-1;i&gt;=0;i--){\n            if(s[i]=='0') continue;\n            else{\n                pos=i;\n                break;\n            }\n        }\n        dbg(pos);\n        int need=0;\n        for(int i=pos-1;i&gt;=0;i--){\n            if(s[i]!='0'){\n                need++;\n            }\n        }\n        cout&lt;&lt;s.size()-1-pos+need&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"daily/2025/0409/#c","title":"C","text":"<p>\u9898\u610f\u4e3a\u5c06\u4e00\u4e2a\u6570\u5faa\u73afn\u6b21\u5f97\u5230\u65b0\u6570\u5b57\uff0c\u95ee\u4f60\u662f\u4e0d\u662f\u8d28\u6570\u3002</p> <p>\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u4f55\u6570\u5b57\uff0c\u8981\u4e48\u662f\u8d28\u6570\uff0c\u8981\u4e48\u4e0d\u662f\u8d28\u6570\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e3e\u4f8b\uff0c\u6700\u540e\u53ef\u4ee5\u5f97\u51fa\u9664\u4e861\u8fd9\u4e2a\u6570\u5b57\uff0c\u4efb\u4f55\u6570\u5b57\u53ea\u8981\u5faa\u73af\u7684\u6b21\u6570\\(&gt;=\\)2\u90fd\u4e0d\u662f\u8d28\u6570\uff0c1\u5faa\u73af\u4e24\u6b21\u662f11\uff0c\u662f\u4e00\u4e2a\u8d28\u6570\uff0c\u5bf9\u6b64\u7279\u5224\u4e00\u4e0b\uff0c\u7136\u540ek\\(&gt;=2\\)\u7684\u65f6\u5019\u90fd\u4e0d\u884c\uff0c\u5f53\\(k=1\\)\u7684\u65f6\u5019\u68c0\u67e5\u8fd9\u4e2a\u6570\u662f\u4e0d\u662f\u8d28\u6570\u5373\u53ef\uff0c\u56e0\u4e3a\u6570\u5f88\u5927\uff0c\u6240\u4ee5\u68c0\u67e5\u8d28\u6570\u65f6\u4e0d\u80fd\u4ece2\u904d\u5386\u5230x-1\uff0c\u8fd9\u6837\u4f1a\u8d85\u65f6\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u5b66\u7ed3\u8bba\uff0c\u4e00\u4e2a\u975e\u8d28\u6570\u57282\u5230\u5b83\u7684\u5f00\u65b9\u4e4b\u95f4\u4e00\u5b9a\u6709\u56e0\u5b50\uff0c\u6240\u4ee5\u904d\u5386\u6761\u4ef6\u4e3a\\(i*i&lt;=x\\)</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#if defined(LOCAL)\n#include&lt;D:/template/yuanshen.hpp&gt;\n#else\n#include&lt;bits/stdc++.h&gt;\n#define dbg(...) 42\n#endif\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        ll x;\n        cin&gt;&gt;x;\n        int k;\n        cin&gt;&gt;k;\n\n        if(x==1&amp;&amp;k!=2){\n            cout&lt;&lt;\"NO\"&lt;&lt;endl;\n            continue;\n        }\n        if(x==1&amp;&amp;k==2){\n            cout&lt;&lt;\"YES\"&lt;&lt;endl;\n            continue;\n        }\n        if(k&gt;=2){\n            cout&lt;&lt;\"NO\"&lt;&lt;endl;\n            continue;\n        }\n        bool check=true;\n        for(int i=2;i*i&lt;=x;i++){\n            if(x%i==0){\n                check=false;\n                break;\n            }\n        }\n        if(!check) cout&lt;&lt;\"NO\"&lt;&lt;endl;\n        else cout&lt;&lt;\"YES\"&lt;&lt;endl;\n    }\n    return 0;\n}\n// 525252\n</code></pre>"},{"location":"daily/2025/0409/#educational-codeforces-round-174-rated-for-div-2","title":"Educational Codeforces Round 174 (Rated for Div. 2)","text":""},{"location":"daily/2025/0409/#b_1","title":"B","text":"<p>\u9996\u5148\u6839\u636e\u89c2\u5bdf\u548c\u81ea\u5df1\u753b\u56fe\u53ef\u77e5\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684\u964c\u751f\u4eba\u96c6\u5408\uff0c\u6700\u591a\u53ea\u9700\u8981\u4e24\u6b21\u5c31\u53ef\u4ee5\u5168\u90e8\u8f6c\u6362\u4e3a\u5176\u4ed6\u7684\u989c\u8272\uff0c\u56e0\u4e3a\u5c31\u7b97\u8fd9\u4e2a\u96c6\u5408\u4e2d\u5b58\u5728\u76f8\u90bb\u7684\u5355\u5143\u683c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u53ea\u9009\u62e9\u6240\u6709\u4e0d\u76f8\u90bb\u7684\u5355\u5143\u683c\u8fdb\u884c\u67d3\u8272\uff0c\u5269\u4e0b\u7684\u5355\u5143\u683c\u4e5f\u5fc5\u7136\u5168\u90fd\u4e0d\u76f8\u90bb\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u6bcf\u4e2a\u6570\u5b57\u6240\u7ec4\u6210\u7684\u96c6\u5408\u662f\u5426\u6709\u76f8\u90bb\u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u5982\u679c\u6709\uff0c\u8fd9\u4e2a\u6570\u5b57\u7ec4\u6210\u7684\u96c6\u5408\u5c31\u9700\u8981\u4e24\u6b21\u64cd\u4f5c\uff0c\u5426\u5219\u53ea\u9700\u8981\u4e00\u6b21\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u6700\u540e\u7684\u7b54\u6848\u8981\u6c42\u8f93\u51fa\u6700\u5c0f\u7684\u64cd\u4f5c\u6570\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e24\u6b21\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u7559\u4e00\u4e2a\u4e0d\u67d3\u8272\uff0c\u5982\u679c\u6ca1\u6709\u4e24\u6b21\u7684\uff0c\u4e5f\u662f\u8981\u7559\u4e00\u4e2a\u4e00\u6b21\u7684\u4e0d\u67d3\u8272\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u5373\u4e3a\uff0c\u6bcf\u4e2a\u6570\u5b57\u7684\u96c6\u5408\u7684\u64cd\u4f5c\u6570\u76f8\u52a0\u518d\u51cf\u53bb\u4e00\u4e2a\u6700\u5927\u503c\u5373\u53ef</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#if defined(LOCAL)\n#include&lt;D:/template/yuanshen.hpp&gt;\n#else\n#include&lt;bits/stdc++.h&gt;\n#define dbg(...) 42\n#endif\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        int n,m;\n        cin&gt;&gt;n&gt;&gt;m;\n        vector&lt;vector&lt;int&gt;&gt; a(n,vector&lt;int&gt; (m));\n        for(int r=0;r&lt;n;r++){\n            for(int c=0;c&lt;m;c++){\n                cin&gt;&gt;a[r][c];\n            }\n        }\n        vector&lt;int&gt; check(n*m+1,0);\n        for(int i=0;i&lt;n;i++){\n            for(int j=0;j&lt;m;j++){\n                check[a[i][j]]=max(check[a[i][j]],1);\n                if(i!=0&amp;&amp;a[i][j]==a[i-1][j]) check[a[i][j]]=2;\n                if(j!=0&amp;&amp;a[i][j]==a[i][j-1]) check[a[i][j]]=2;\n            }\n        }\n        int ans=0;\n        for(int i=0;i&lt;check.size();i++){\n            ans+=check[i];\n        }\n        //cout&lt;&lt;ans&lt;&lt;endl;\n        cout&lt;&lt;ans-*max_element(check.begin(),check.end())&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"daily/2025/0409/#codeforces-round-1004-div-2","title":"Codeforces Round 1004 (Div. 2)","text":""},{"location":"daily/2025/0409/#b_2","title":"B","text":"<p>\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u76ee\uff0c\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u76f4\u63a5\u5f97\u51fa\u4e24\u4e2a\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u662f\u76f8\u540c\u7684\u3002\u518d\u8d2a\u5fc3\u7684\u53bb\u60f3\u7684\u8bdd\u6bcf\u4e2a\u5143\u7d20\u6211\u4eec\u53ea\u9700\u8981\u7559\u4e24\u4e2a\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230a\u4e00\u4e2ab\u4e00\u4e2a\u6765\u4fdd\u8bc1\u6b64\u5143\u7d20\u7684\u6570\u91cf\u76f8\u7b49\u3002</p> <p>\u6240\u4ee5\u89e3\u9898\u601d\u8def\u5c31\u662f\uff0c\u904d\u5386a\u7684map\uff0c\u5bf9\u4e8e\u6570\u91cf\\(&gt;=2\\)\u7684\u5143\u7d20\u6211\u4eec\u5728a\u7559\u4e00\u4e2a\uff0c\u7ed9b\u4e00\u4e2a\uff0c\u5269\u4e0b\u7684\u5168\u90e8\u8f6c\u6362\u4e3a\\(+1\\)\uff0c\u540c\u65f6\u66f4\u6539\u5bf9\u5e94\u6570\u5b57\u5728map\u4e2d\u7684\u5b58\u50a8\uff0c\u6700\u540e\u518d\u68c0\u67e5\u4e00\u4e0ba\u7684map\u548cb\u7684map\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#if defined(LOCAL)\n#include&lt;D:/template/yuanshen.hpp&gt;\n#else\n#include&lt;bits/stdc++.h&gt;\n#define dbg(...) 42\n#endif\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        int n;\n        cin&gt;&gt;n;\n        vector&lt;int&gt; a(n);\n        map&lt;int,int&gt; mpa;\n        map&lt;int,int&gt; mpb;\n        for(int i=0;i&lt;n;i++){\n            cin&gt;&gt;a[i];\n            mpa[a[i]]++;\n        }\n        sort(a.begin(),a.end());\n        // for(int i=0;i&lt;n;i++){\n        //     if(mpa[a[i]]&gt;)\n        // }\n        bool check=true;\n        for(auto &amp;x:mpa){\n\n            if(x.second&lt;2){\n                cout&lt;&lt;\"NO\"&lt;&lt;endl;\n                check=false;\n                break;\n            }\n            else if(x.second==2){\n                mpa[x.first]--;\n                mpb[x.first]++;\n            }\n            else{\n                int manbaout=x.second-2;\n                mpa[x.first]=1;\n                mpb[x.first]=1;\n                mpa[x.first+1]+=manbaout;\n            }\n        }\n        if(!check) continue;\n        if(mpa==mpb) cout&lt;&lt;\"YES\"&lt;&lt;endl;\n        else cout&lt;&lt;\"NO\"&lt;&lt;endl;\n    }\n    return 0;\n}\n// 3 3 3 4 5\n// 3\n</code></pre>"},{"location":"daily/2025/0414/","title":"4\u670814\u65e5","text":""},{"location":"daily/2025/0414/#_1","title":"\u4e8c\u5206","text":""},{"location":"daily/2025/0414/#httpswwwluogucomcnproblemp2678","title":"https://www.luogu.com.cn/problem/P2678","text":"<p>\u8bfb\u9898\u8981\u6c42\u6700\u5927\u6700\u5c0f\u503c\uff0c\u89e6\u53d1\u5173\u952e\u8bcd\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\uff0c\u4ece\u96f6\u4e8c\u5206\u5230\u6700\u5927\u8ddd\u79bb\uff0c\u7136\u540e\u53bb\u904d\u5386\u6570\u7ec4\u4e2d\u5404\u4e2a\u77f3\u5934\u4e4b\u95f4\u7684\u8ddd\u79bb\u5224\u65ad\u662f\u5426\u5c0f\u4e8e\u4e8c\u5206\u503c\u5373\u53ef\uff0c\u5982\u679c\u5c0f\u4e8e\u5219\u9700\u8981\u79fb\u9664\u77f3\u5934\u5e76\u8bb0\u5f55\u64cd\u4f5c\u6b21\u6570\u52a0\u4e00\uff0c\u6700\u540e\u6839\u636e\u64cd\u4f5c\u6b21\u6570\u4e0e\u9898\u76ee\u6240\u7ed9\u6700\u5927\u6570\u5bf9\u6bd4\u5224\u65ad\u662f\u5426check\u51fd\u6570\u8fd4\u56de\u503c\u3002</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#include&lt;bits/stdc++.h&gt;\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nbool check(vector&lt;ll&gt; ANS,ll MID,int M){\n    int cnt=0;\n    for(int i=0;i&lt;ANS.size()-1;i++){\n        ll juli=ANS[i+1]-ANS[i];\n        if(juli&lt;MID){\n            cnt++;\n            ANS[i+1]=ANS[i];\n        }\n        if(cnt&gt;=M+1) break;\n    }\n    // for(int i=0;i&lt;ANS.size();i++){\n    //     cout&lt;&lt;ANS[i]&lt;&lt;\" \";\n    // }\n    // cout&lt;&lt;endl;\n    return cnt&gt;M;\n}\nint main(){\n    int n,m;\n    ll l;\n    cin&gt;&gt;l;\n    cin&gt;&gt;n&gt;&gt;m;\n    if(!n){\n        cout&lt;&lt;l&lt;&lt;endl;\n        return 0;\n    }\n    vector&lt;ll&gt; dis(n+2);\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;dis[i];\n    }\n    dis[0]=0,dis[n+1]=l;\n    ll low=1,high=l;\n    while(low&lt;high){\n        ll mid=(low+high)&gt;&gt;1;\n        if(check(dis,mid,m)){\n            high=mid;\n        }\n        else{\n            low=mid+1;\n        }\n        //cout&lt;&lt;low&lt;&lt;\" \"&lt;&lt;high&lt;&lt;endl;\n    }\n    cout&lt;&lt;low-1&lt;&lt;endl;\n    return 0;\n}\n// 2 9 3 3 4 4 \n// 2 9 6 4 4 \n</code></pre>"},{"location":"daily/2025/0414/#httpswwwluogucomcnproblemp1902","title":"https://www.luogu.com.cn/problem/P1902","text":"<p>\u770b\u9898\u76ee\u540c\u6837\u8981\u6c42\u7684\u662f\u4e00\u4e2a\u6700\u5c0f\u7684\u6700\u5927\u503c\uff0c\u540c\u6837\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\uff0c\u4ece\u96f6\u4e8c\u5206\u5230\u6700\u5927\u7684\u5408\u6cd5\u7b54\u6848\uff0c\u7136\u540e\u7528dfs\u8d70\u4e00\u904d\u8fd9\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6bd4\u4e8c\u5206\u503c\u5927\u7684\u5c31\u4e0d\u8d70\uff0c\u53ea\u8d70\u5c0f\u4e8e\u7b49\u4e8e\u4e8c\u5206\u503c\u7684\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0bdfs\u80fd\u5426\u5230\u8fbe\u6700\u540e\u4e00\u5c42\u5373\u53ef</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#include&lt;bits/stdc++.h&gt;\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nbool ok=false;\nint n,m;\nvector&lt;vector&lt;bool&gt;&gt; vis(n,vector&lt;bool&gt; (m,false));\nvoid dfs(int mid,vector&lt;vector&lt;int&gt;&gt; &amp;p,int x,int y){\n    if(x==n-1){\n        ok=true;\n        return;\n    }\n    if(x==0&amp;&amp;y==0){\n        if(x==n-1){\n            ok=true;\n            return;\n        }\n        if(!vis[x+1][y]&amp;&amp;p[x+1][y]&lt;=mid){\n            vis[x+1][y]=true;\n            dfs(mid,p,x+1,y);\n        }\n        if(!vis[x][y+1]&amp;&amp;p[x][y+1]&lt;=mid){\n            vis[x][y+1]=true;\n            dfs(mid,p,x,y+1);\n        }\n    }\n    else if(x==0&amp;&amp;y==m-1){\n        if(x==n-1){\n            ok=true;\n            return;\n        }\n        if(!vis[x+1][y]&amp;&amp;p[x+1][y]&lt;=mid){\n            vis[x+1][y]=true;\n            dfs(mid,p,x+1,y);\n        }\n        if(!vis[x][y-1]&amp;&amp;p[x][y-1]&lt;=mid){\n            vis[x][y-1]=true;\n            dfs(mid,p,x,y-1);\n        }\n    }\n    else if(x==0){\n        if(x==n-1){\n            ok=true;\n            return;\n        }\n        if(!vis[x+1][y]&amp;&amp;p[x+1][y]&lt;=mid){\n            vis[x+1][y]=true;\n            dfs(mid,p,x+1,y);\n        }\n        if(!vis[x][y+1]&amp;&amp;p[x][y+1]&lt;=mid){\n            vis[x][y+1]=true;\n            dfs(mid,p,x,y+1);\n        }\n        if(!vis[x][y-1]&amp;&amp;p[x][y-1]&lt;=mid){\n            vis[x][y-1]=true;\n            dfs(mid,p,x,y-1);\n        }\n    }\n    else if(y==0){\n        if(x==n-1){\n            ok=true;\n            return;\n        }\n        if(!vis[x+1][y]&amp;&amp;p[x+1][y]&lt;=mid){\n            vis[x+1][y]=true;\n            dfs(mid,p,x+1,y);\n        }\n        if(!vis[x-1][y]&amp;&amp;p[x-1][y]&lt;=mid){\n            vis[x-1][y]=true;\n            dfs(mid,p,x-1,y);\n        }\n        if(!vis[x][y+1]&amp;&amp;p[x][y+1]&lt;=mid){\n            vis[x][y+1]=true;\n            dfs(mid,p,x,y+1);\n        }\n    }\n    else if(y==m-1){\n        if(x==n-1){\n            ok=true;\n            return;\n        }\n        if(!vis[x+1][y]&amp;&amp;p[x+1][y]&lt;=mid){\n            vis[x+1][y]=true;\n            dfs(mid,p,x+1,y);\n        }\n        if(!vis[x-1][y]&amp;&amp;p[x-1][y]&lt;=mid){\n            vis[x-1][y]=true;\n            dfs(mid,p,x-1,y);\n        }\n        if(!vis[x][y-1]&amp;&amp;p[x][y-1]&lt;=mid){\n            vis[x][y-1]=true;\n            dfs(mid,p,x,y-1);\n        }\n    }\n    else{\n        if(x==n-1){\n            ok=true;\n            return;\n        }\n        if(!vis[x+1][y]&amp;&amp;p[x+1][y]&lt;=mid){\n            vis[x+1][y]=true;\n            dfs(mid,p,x+1,y);\n        }\n        if(!vis[x-1][y]&amp;&amp;p[x-1][y]&lt;=mid){\n            vis[x-1][y]=true;\n            dfs(mid,p,x-1,y);\n        }\n        if(!vis[x][y-1]&amp;&amp;p[x][y-1]&lt;=mid){\n            vis[x][y-1]=true;\n            dfs(mid,p,x,y-1);\n        }\n        if(!vis[x][y+1]&amp;&amp;p[x][y+1]&lt;=mid){\n            vis[x][y+1]=true;\n            dfs(mid,p,x,y+1);\n        }\n    }\n}\nbool check(int mid,vector&lt;vector&lt;int&gt;&gt; &amp;p){\n    int x=0,y=0;\n    vis=vector&lt;vector&lt;bool&gt;&gt; (n,vector&lt;bool&gt; (m));\n    ok=false;\n    dfs(mid,p,x,y);\n    return ok;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    cin&gt;&gt;n&gt;&gt;m;  \n    vector&lt;vector&lt;int&gt;&gt; p(n,vector&lt;int&gt; (m));\n    int l=0,r=0;\n    for(int i=0;i&lt;n;i++){\n        for(int j=0;j&lt;m;j++){\n            cin&gt;&gt;p[i][j];\n            r=max(p[i][j],r);\n        }\n    }\n    while(l&lt;r){\n        int mid=(l+r)&gt;&gt;1;\n        if(check(mid,p)){\n            r=mid;\n        }\n        else{\n            l=mid+1;\n        }\n    } \n    cout&lt;&lt;l&lt;&lt;endl;\n    return 0;\n}\n/*\n    0 5 2\n    3 5 4\n*/\n</code></pre>"},{"location":"daily/2025/0415/","title":"4\u670815\u65e5","text":""},{"location":"daily/2025/0415/#httpscodeforcescomcontest2065problemc2","title":"https://codeforces.com/contest/2065/problem/C2","text":"<p>\u9898\u76ee\u8ba9\u6211\u4eec\u628a\u6570\u7ec4a\u53d8\u4e3a\u5347\u5e8f\u6570\u7ec4\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u9879\u662f\u6700\u5927\u7684\uff0c\u56e0\u6b64\u6709\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u64cd\u4f5c\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9b\u6570\u7ec4\u6392\u5e8f\uff0c\u540c\u65f6\u5b9a\u4e49\u4e00\u4e2a\u65b0\u6570\u7ec4\u7528\u4e8e\u5b58\u50a8\u6570\u7ec4a\u4e2d\u5404\u4e2a\u5143\u7d20\u64cd\u4f5c\u540e\u7684\u503c\uff0c\u8fd9\u91cc\u5f88\u5bb9\u6613\u5f97\u5230\\(c[n]=b[m]-a[n]\\)\uff0c\u6211\u4eec\u5c06\u6700\u540e\u4e00\u4e2a\u6570\u8bbe\u6210\u6700\u5927\u7684\u6570\u5b57\uff0c\u7136\u540e\u4ece\u540e\u5411\u524d\u904d\u5386\uff0c\u6bcf\u4e2a\u6570\u90fd\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u540e\u4e00\u4f4d\u3002</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#if defined(LOCAL)\n#include&lt;D:/template/yuanshen.hpp&gt;\n#else\n#include&lt;bits/stdc++.h&gt;\n#define dbg(...) 42\n#endif\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        int n,m;\n        cin&gt;&gt;n&gt;&gt;m;\n        vector&lt;ll&gt; a(n+1),b(m+1);\n        for(int i=1;i&lt;=n;i++){\n            cin&gt;&gt;a[i];\n        }       \n        for(int j=1;j&lt;=m;j++){\n            cin&gt;&gt;b[j];\n        }\n        sort(b.begin()+1,b.end());\n        vector&lt;ll&gt; c(n+1);\n        bool check=true;\n        c[n]=max(a[n],b[m]-a[n]);   // \u5c06\u6700\u540e\u4e00\u9879\u8bbe\u7f6e\u4e3a\u6700\u5927\u9879\n        for(int i=n-1;i&gt;=1;i--){\n            if(a[i]&gt;c[i+1]){\n                c[i]=-1*INF;        // \u5982\u679c\u5f53\u524d\u6ca1\u8fdb\u884c\u64cd\u4f5c\u7684a[i]\u5927\u4e8e\u8fdb\u884c\u8fc7\u64cd\u4f5c\u7684a[i+1],\u5148\u5c06c[i]\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6781\u5c0f\u7684\u6570\u5b57\uff0c\u5728\u540e\u9762\u65b9\u4fbf\u6211\u4eec\u5224\u65ad\u6570\u7ec4\u4e2d\u80fd\u5426\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u5b57\n            }\n            else c[i]=a[i];\n            if(b[1]&lt;=a[i]+c[i+1]){  // \u8fd9\u4e00\u6b65\u7528\u4e8e\u5224\u65ad\u6570\u7ec4\u7b2c\u4e00\u4e2a\u6570\u5b57\u662f\u5426\u80fd\u591f\u6ee1\u8db3\u6761\u4ef6\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5219\u8bf4\u660e\u6570\u7ec4\u4e2d\u6240\u6709\u6570\u5b57\u90fd\u4e0d\u884c\uff0c\u90a3\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u6ca1\u5fc5\u8981\u53bb\u4e8c\u5206\u67e5\u627e\u4e86\n                dbg(a[i]+c[i+1]);\n                int pos=upper_bound(b.begin(),b.end(),a[i]+c[i+1])-b.begin()-1;    // b[j]-a[i]&lt;=c[i+1] -&gt; b[j]&lt;=a[i]+c[i+1],\u6240\u4ee5\u7528upper_bound\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8ea[i]+c[i+1]\u7684b[j]\uff0c\u7136\u540e\u51cf\u4e00\u5c31\u7b97\u5c0f\u4e8e\u7b49\u4e8e\u7684\u4e86\n                c[i]=max(c[i],b[pos]-a[i]);\n            }\n            if(c[i]==-1*INF){\n                check=false;\n                break;\n            }\n            dbg(c);\n        }\n        dbg(c);\n        dbg(check);\n        if(!check) cout&lt;&lt;\"NO\"&lt;&lt;endl;\n        else cout&lt;&lt;\"YES\"&lt;&lt;endl;\n    }  \n    return 0;\n}\n// \u5148\u7ed9b\u6570\u7ec4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e4b\u540e\u4ece1\u5230n-1\u904d\u5386\u6570\u7ec4a\uff0c\u7136\u540e\u6bcf\u4e00\u6b21\u904d\u5386\u7684\u65f6\u5019\u90fd\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u53bb\u641c\u7d22b\u6570\u7ec4\u91cc\u7b2c\u4e00\u4e2a\u80fd\u591f\u4f7f\u5f97a[i]=b[j]-a[i]&lt;=a[i+1]\u7684\u6570\u5b57\uff0c\u540c\u65f6\u66f4\u65b0a[i];\n</code></pre>"},{"location":"daily/2025/0415/#httpscodeforcescomcontest2065problemd","title":"https://codeforces.com/contest/2065/problem/D","text":"<p>\u8fd9\u9053\u9898\u76ee\u9996\u5148\u89c2\u5bdf\u6837\u4f8b\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u653e\u5728\u524d\u9762\u7684\u6570\u5b57\u4f1a\u88ab\u52a0\u4e0a\u6700\u591a\u6b21\uff0c\u6240\u4ee5\u89e3\u9898\u601d\u8def\u5df2\u7ecf\u51fa\u6765\u4e86\uff0c\u5c31\u662f\u5c3d\u53ef\u80fd\u7684\u8ba9\u6570\u5b57\u548c\u5927\u7684\u6570\u7ec4\u5728\u524d\u9762\uff0c\u8ba9\u5176\u88ab\u52a0\u4e0a\u66f4\u591a\u6b21</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#if defined(LOCAL)\n#include&lt;D:/template/yuanshen.hpp&gt;\n#else\n#include&lt;bits/stdc++.h&gt;\n#define dbg(...) 42\n#endif\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        int n,m;\n        cin&gt;&gt;n&gt;&gt;m;\n        vector&lt;vector&lt;ll&gt;&gt; a(n,vector&lt;ll&gt; (m));\n        multimap&lt;ll,ll&gt; mp;\n        for(int i=0;i&lt;n;i++){\n            ll ans=0;\n            for(int j=0;j&lt;m;j++){\n                cin&gt;&gt;a[i][j];\n                ans+=a[i][j];\n            }\n            mp.insert({ans,i});\n        }\n        dbg(a);\n        dbg(mp);\n        vector&lt;ll&gt; ans(n*m+1),pre(n*m+1);\n        ll sum=0;\n        ans.pb(0);\n        for(auto it=mp.rbegin();it!=mp.rend();it++){\n            int hang=it-&gt;second;\n            for(int i=0;i&lt;m;i++){\n                ans.pb(a[hang][i]);\n                pre.pb(ans.back()+pre.back());\n                sum+=pre.back();\n            }\n        }\n        dbg(ans);\n        dbg(pre);\n        cout&lt;&lt;sum&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"daily/2025/0415/#httpscodeforcescomcontest2053problemb","title":"https://codeforces.com/contest/2053/problem/B","text":"<p>\u9898\u610f\u4e3a\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u7ec4\u7684l\u548cr\uff0c\u6211\u4eec\u80fd\u5426\u5728l\u5230r\u8fd9\u4e2a\u8303\u56f4\u5185\u9009\u62e9\u4e00\u4e2a\u6570\uff0c\u540c\u65f6\u5176\u4ed6\u6240\u6709\u7684l\u548cr\u5728\u5b83\u4eec\u7684\u8303\u56f4\u4e2d\u90fd\u8fd8\u6709\u522b\u7684\u6570\u5b57\u53ef\u9009\uff0c\u4e0d\u4f1a\u548c\u6211\u4eec\u9009\u4e2d\u90a3\u4e00\u7ec4\u6240\u9009\u7684\u6570\u5b57\u91cd\u590d\u3002</p> <p>\u5217\u4e3e\u4e00\u4e0b\u60c5\u51b5</p> <p>1.\u5982\u679c\u6240\u6709\u7684\\(l-r\\)\u7ec4\u5408\u90fd\u6ca1\u6709\\(l=r\\)\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u6240\u6709\u7684\u7ec4\u5408\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u6bcf\u6b21\u9009\u62e9\u7684\u7ec4\u5408\u4e2d\u9009\u51fa\u6765\u7684\u6570\u7ec4\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u5c31\u597d\u4e86\uff0c\u522b\u7684\u7ec4\u5408\u518d\u4e0d\u4e0e\u8fd9\u4e2a\u6570\u5b57\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\u662f\u53ef\u4ee5\u4e92\u76f8\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u5373\u4f7f\u6240\u6709\u7684\\(l-r\\)\u7ec4\u5408\u76f8\u540c\u4e5f\u662f\u53ef\u4ee5\u7684</p> <p>2.\\(l-r\\)\u7ec4\u5408\u4e2d\u6709\\(l=r\\)\u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u90a3\u5c31\u8bf4\u660e\u5bf9\u4e8e\u8fd9\u4e2a\\(l-r\\)\u7ec4\u5408\uff0c\u5b83\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\uff0c\u6ca1\u6709\u522b\u7684\u9009\u62e9\uff0c\u6240\u4ee5\\(l\\)\u8fd9\u4e2a\u6570\u5b57\u5c31\u662f\u88ab\u201c\u62a2\u5360\u201d\u4e86\uff0c\u522b\u7684\u7ec4\u5408\u90fd\u4e0d\u80fd\u9009\u62e9\u8fd9\u4e2a\u6570\u5b57\uff0c\u7531\u6b64\u53ef\u5f97\uff0c\u5982\u679c\u540c\u4e00\u4e2a\\(l=r\\)\u7684\u7ec4\u5408\u51fa\u73b0\u4e86\u4e24\u6b21\u53ca\u4ee5\u4e0a\uff0c\u4f8b\u5982\u6709\u4e24\u4e2a4 4\uff0c\u90a3\u4e48\u6240\u6709\u76844 4\u7ec4\u5408\u90fd\u4e0d\u53ef\u4ee5\u3002</p> <p>3.\u5982\u679c\u60c5\u51b5\u4e00\u548c\u60c5\u51b5\u4e8c\u540c\u65f6\u51fa\u73b0\uff0c\u6211\u4eec\u5bf9\u4e8e\\(l!=r\\)\u7684\u7ec4\u5408\u5c31\u9700\u8981\u7279\u522b\u8003\u8651\uff0c\u4f8b\u59822 4\u8fd9\u4e2a\u7ec4\u5408\uff0c\u5982\u679c\u540c\u65f6\u8fd8\u5b58\u57282 2\uff0c3 3\uff0c4 4\u8fd9\u6837\u7684\u7ec4\u5408\uff0c\u90a3\u4e482 4\u8fd9\u4e2a\u7ec4\u5408\u90fd\u4e0d\u884c\u4e86\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u524d\u7f00\u548c\u6765\u5224\u65ad\u8fd9\u4e2a\u7ec4\u5408\u662f\u5426\u5408\u6cd5\uff0c\u5373\u5982\u679c\u51fa\u73b0\u4e86\\(l=r\\)\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u5728\u6807\u8bb0\u6570\u7ec4\u4e2d\u5c06\\(arr[l]=1\\)\uff0c\u7136\u540e\u518d\u7ed9\u524d\u7f00\u548c\u6570\u7ec4\u8d4b\u503c\uff0c\u4f8b\u5982\u5bf9\u4e8e2 4\u8fd9\u4e2a\u7ec4\u5408\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\\(pre[r]-pre[l-1]\\)\u662f\u5426\u7b49\u4e8e2 4\u7ec4\u5408\u4e2d\u6570\u5b57\u7684\u6570\u91cf\u5c31ok\u4e86\u3002</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#if defined(LOCAL)\n#include&lt;D:/template/yuanshen.hpp&gt;\n#else\n#include&lt;bits/stdc++.h&gt;\n#define dbg(...) 42\n#endif\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int t;\n    cin&gt;&gt;t;\n    while(t--){\n        int n;\n        cin&gt;&gt;n;\n        vector&lt;int&gt; l(n+1),r(n+1);\n        vector&lt;int&gt; check(n*2+2);\n        map&lt;int,int&gt; mp;\n        for(int i=1;i&lt;=n;i++){\n            cin&gt;&gt;l[i]&gt;&gt;r[i];\n            if(l[i]==r[i]){\n                check[l[i]]=1;\n                mp[l[i]]++;\n            }\n        }  \n        vector&lt;int&gt; pre(n*2+2);\n        for(int i=1;i&lt;=n*2+1;i++){\n            pre[i]=pre[i-1]+check[i];\n        }\n        string s=\"\";\n        for(int i=1;i&lt;=n;i++){\n            int choose=r[i]-l[i]+1;\n            if(l[i]!=r[i]){\n                int sum=pre[r[i]]-pre[l[i]-1];\n                if(sum==choose) s+='0';\n                else s+='1';\n            }\n            else{\n                if(mp[l[i]]&gt;1) s+='0';\n                else s+='1';\n            }\n        }\n        cout&lt;&lt;s&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"suanfa/bag/","title":"\u80cc\u5305\u95ee\u9898","text":""},{"location":"suanfa/bag/#01","title":"01\u80cc\u5305","text":"<p>https://www.luogu.com.cn/problem/P1048</p> <p>https://www.luogu.com.cn/problem/P1049</p> <p>https://www.luogu.com.cn/problem/P1060</p> <p>\u80cc\u5305\u95ee\u9898\u7684\u53d8\u91cf\u4e3b\u8981\u662f\u80cc\u5305\u7684\u6700\u5927\u5bb9\u91cf\uff0c\u7269\u54c1\u7684\u6570\u91cf\u4ee5\u53ca\u7269\u54c1\u7684\u4ef7\u503c\uff0c</p> <p>\u572801\u80cc\u5305\u9898\u76ee\u4e2d\uff0c\u7269\u54c1\u4e0d\u4f1a\u88ab\u91cd\u590d\u9009\u53d6\uff0c\u8fd9\u4e5f\u662f\u5b83\u548c\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u7684\u4e3b\u8981\u533a\u522b\u3002</p> <p>01\u80cc\u5305\u95ee\u9898\u7684\u5927\u81f4\u89e3\u9898\u601d\u8def\u4e3a\uff0c\u4f7f\u7528\u53cc\u91cdfor\u5faa\u73af\uff0c\u5916\u5c42\u5faa\u73af\u904d\u5386\u7269\u54c1\uff0c\u5185\u5c42\u5faa\u73af\u904d\u5386\u80cc\u5305\u7684\u5bb9\u91cf\uff0c\u7269\u54c1\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u904d\u5386\uff0c\u5728\u6700\u540e\u4e00\u4e2a\u7269\u54c1\u7ed3\u675f\uff0c\u80cc\u5305\u7684\u5bb9\u91cf\u4ece\u96f6\u5f00\u59cb\u904d\u5386\uff0c\u5230\u80cc\u5305\u7684\u6700\u5927\u5bb9\u91cf\u4e3a\u6b62\u3002</p> <pre><code>dp[i][j]=max(dp[i-1][j-weight[i]]+value[i],dp[i-1][j]);\n</code></pre> <p>\u800c\u8fd9\u4e2a\u4e3a01\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8ba9\u6211\u4eec\u6765\u8be6\u7ec6\u7406\u89e3\u8fd9\u4e2a\u65b9\u7a0b\u3002</p> <p>\u9996\u5148\u8fd9\u4e2a\u65b9\u7a0b\u6210\u7acb\u7684\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u80fd\u88ab\u4f7f\u7528\u7684\u524d\u63d0\u5c31\u662f\u2014\u2014\u5f53\u524d\u9009\u62e9\u7684\u7269\u54c1\u7684\u91cd\u91cf\u662f\u5426\u8d85\u51fa\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\uff0c\u662f\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\uff0c\u4e0d\u662f\u6700\u5927\u5bb9\u91cf\uff0c\u4e5f\u4e0d\u662f\u5269\u4f59\u5bb9\u91cf\u3002\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u90a3\u5c31\u8bf4\u660e\u8fd9\u4e2a\u7269\u54c1\u662f\u53ef\u4ee5\u88ab\u653e\u8fdb\u80cc\u5305\u7684\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u4e5f\u5c31\u53ef\u4ee5\u88ab\u4f7f\u7528\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u6211\u4eec\u65e2\u7136\u53ef\u4ee5\u5c06\u8be5\u7269\u54c1\u653e\u5165\u80cc\u5305\uff0c\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u653e\u5165\u540e\u6211\u4eec\u80fd\u5426\u8ba9\u80cc\u5305\u4e2d\u7269\u54c1\u7684\u603b\u4ef7\u503c\u53d8\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2amax\u51fd\u6570\u6765\u5224\u65ad\u653e\u5165\u548c\u4e0d\u653e\u5165\u7684\u4ef7\u503c\u5927\u5c0f\uff0c\u5de6\u8fb9\u4e3a\u653e\u5165\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u53f3\u8fb9\u4e3a\u4e0d\u653e\u5165\u3002</p> <p>\u5148\u6765\u8bf4\u8bf4\u5de6\u8fb9\uff0c\u65e2\u7136\u6211\u4eec\u9009\u62e9\u653e\u5165\uff0c\u6b64\u65f6\u80cc\u5305\u7684\u603b\u4ef7\u503c\u5c31\u7b49\u4e8e</p> <pre><code>dp[i-1][j-weight[i]]+value[i]]\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u7b2c\u4e00\u4e2a\u4e0b\u6807\u662fi-1\u5462\uff0c\u56e0\u4e3a\u6211\u4eec\u65e2\u7136\u8981\u653e\u5f53\u524d\u7269\u54c1\uff0c\u4e3a\u4e86\u8ba1\u7b97\u80cc\u5305\u4ef7\u503c\uff0c\u5fc5\u7136\u9700\u8981\u524d\u4e00\u4e2a\u7269\u54c1\u653e\u5165\u540e\u7684\u80cc\u5305\u60c5\u51b5\uff0c\u6240\u4ee5\u662fi-1\u3002</p> <p>\u7136\u540e\u662f\u7b2c\u4e8c\u4e2a\u4e0b\u6807\uff0c\u6211\u89c9\u5f97\u80cc\u5305\u95ee\u9898\u6700\u96be\u7406\u89e3\u7684\u90e8\u5206\uff0c\u4e3a\u4ec0\u4e48\u662f\u76ee\u524d\u7684\u80cc\u5305\u5bb9\u91cf\u51cf\u53bb\u8fd9\u4e2a\u7269\u54c1\u7684\u91cd\u91cf\u5462\uff1f \u6211\u662f\u8fd9\u6837\u7406\u89e3\u7684\u2014\u2014\u4f60\u65e2\u7136\u9009\u62e9\u653e\u5165\u8fd9\u4e2a\u7269\u54c1\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u4e24\u79cd\u53ef\u80fd\uff0c\u4e00\u79cd\u662f\u76ee\u524d\u80cc\u5305\u7684\u5bb9\u91cf\u5728\u4f60\u653e\u5165\u8fd9\u4e2a\u7269\u54c1\u540e\uff0c\u4ecd\u80fd\u652f\u6301\u4f60\u4e0a\u4e00\u4e2a\u653e\u7684\u7269\u54c1\u5728\u91cc\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u8d85\u51fa\uff0c\u7b2c\u4e8c\u79cd\u5c31\u662f\u76ee\u524d\u80cc\u5305\u7684\u5bb9\u91cf\u5728\u4f60\u653e\u5165\u8fd9\u4e2a\u7269\u54c1\u540e\uff0c\u4e0d\u80fd\u5c06\u4e0a\u4e00\u4e2a\u7269\u54c1\u518d\u7559\u5728\u91cc\u9762\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u505a\u51fa\u53d6\u820d\u3002\uff01\uff01\uff01\uff01\uff01\u6240\u4ee5\u8fd9\u4e2a\u76f8\u51cf\u7684\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u5f97\u51fa\u653e\u5165\u6b64\u65f6\u7684\u7269\u54c1\u540e\u80cc\u5305\u7684\u5269\u4f59\u7a7a\u95f4\uff0c\u770b\u5176\u4e0e\u4e0a\u4e00\u4e2a\u7269\u54c1\u91cd\u91cf\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5982\u679c\u5269\u4f59\u7a7a\u95f4\u5927\uff0c\u5c31\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u53cd\u4e4b\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\u8bf4\u7b80\u5355\u70b9\uff0c\u8fd9\u4e2a\u76f8\u51cf\u7684\u4f5c\u7528\u5c31\u662f\u7528\u6765\u5224\u65ad\u662f\u9009\u5f53\u524d\u7684\u7269\u54c1\u66f4\u597d\u8fd8\u662f\u9009\u4e0a\u4e00\u4e2a\u7269\u54c1\u66f4\u597d\uff0c\u5f53\u7136\u8fd9\u90fd\u662f\u5efa\u7acb\u5728\u5269\u4f59\u7a7a\u95f4\u6bd4\u80cc\u5305\u76ee\u524d\u5bb9\u91cf\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c \u5982\u679c\u5927\u90a3\u80af\u5b9a\u90fd\u62ff\u4e86\u3002</p> <pre><code>dp[i-1][j]\n</code></pre> <p>\u7136\u540e\u518d\u6765\u770b\u770b\u53f3\u8fb9\uff0c\u5176\u5b9e\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u4e0e\u4e0a\u4e00\u4e2a\u7269\u54c1\u653e\u5165\u65f6\u7684\u80cc\u5305\u4ef7\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5de6\u8fb9\u7684\u7b2c\u4e8c\u4e2a\u4e0b\u6807\u6700\u540e\u5927\u4e8e\u53f3\u8fb9\u7684\u7b2c\u4e8c\u4e2a\u4e0b\u6807\uff0c\u90a3\u80af\u5b9a\u662f\u5de6\u8fb9\u66f4\u4f18\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u8fd9\u4e2amax\u5c31\u80fd\u6bd4\uff0c\u4f46\u5982\u679c\u5c0f\u4e8e\u4e86\u5c31\u9700\u8981max\u6765\u5224\u65ad\u4e86\u3002</p>"},{"location":"suanfa/bag/#_2","title":"\u5b8c\u5168\u80cc\u5305","text":""},{"location":"suanfa/dfs/","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"<p>\u91c7\u7528\u9012\u5f52\uff0b\u56de\u6eaf\u7684\u65b9\u5f0f\u5b9e\u73b0\u7684\u7b97\u6cd5</p> <pre><code>void dfs(\u5f53\u524d\u72b6\u6001) {\n    if (\u5230\u8fbe\u8fb9\u754c\u6761\u4ef6) {\n        \u5904\u7406\u5f53\u524d\u7b54\u6848;\n        return;\n    }\n\n    for (\u6240\u6709\u53ef\u80fd\u7684\u9009\u62e9) {\n        \u505a\u51fa\u9009\u62e9;\n        dfs(\u4e0b\u4e00\u5c42\u72b6\u6001);\n        \u64a4\u9500\u9009\u62e9; // \u56de\u6eaf\n    }\n}\n</code></pre> \u679a\u4e3e\u6240\u6709\u53ef\u80fd \u516b\u7687\u540e\u3001\u6392\u5217\u7ec4\u5408\u3001\u5168\u6392\u5217\u3001\u5b50\u96c6\u3001\u68cb\u76d8\u653e\u7f6e\u95ee\u9898 \u6811\u3001\u56fe\u7684\u904d\u5386 \u6811\u7684\u904d\u5386\uff08\u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\uff09\uff0c\u56fe\u627e\u8def\u5f84\uff0c\u5c9b\u5c7f\u4e2a\u6570 \u56de\u6eaf\u95ee\u9898 \u6570\u72ec\u3001N\u7687\u540e\u3001\u5355\u8bcd\u641c\u7d22\u3001\u8ff7\u5bab\u3001\u586b\u6570\u5b57 \u627e\u6240\u6709\u8def\u5f84 \u4ece A \u5230 B \u7684\u6240\u6709\u8def\u7ebf\u3001\u6709\u7ea6\u675f\u7684\u641c\u7d22"},{"location":"suanfa/dfs/#httpswwwluogucomcnproblemp1036","title":"https://www.luogu.com.cn/problem/P1036","text":"<p>\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u76ee\uff0c\u6211\u4eec\u662f\u4e0d\u9700\u8981\u4e13\u95e8\u5199\u56de\u6eaf\u90a3\u4e00\u6b65\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u8c03\u7528dfs\u51fd\u6570\u7684\u65f6\u5019\u628a\u6539\u53d8\u7684\u503c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u4e86\uff0c\u6240\u4ee5\u8bf4\u4e0d\u9700\u8981\u624b\u52a8\u5199\u56de\u6eaf\u6b65\u9aa4</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#include&lt;bits/stdc++.h&gt;\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint n,k,ans=0;\nvoid dfs(int pos,int sum,int num,vector&lt;int&gt; x){\n    if(num==k){\n        //if(sum&lt;2) return;\n        for(int i=2;i*i&lt;=sum;i++){\n            if(sum%i==0) return;\n        }\n        ans++;\n        return;\n    }\n    for(int j=pos+1;j&lt;=n;j++){\n        dfs(j,sum+x[j],num+1,x);\n    }\n}\nint main(){\n    cin&gt;&gt;n&gt;&gt;k;\n    vector&lt;int&gt; x(n+1);\n    for(int i=1;i&lt;=n;i++){\n        cin&gt;&gt;x[i];\n    }\n    dfs(0,0,0,x);\n    cout&lt;&lt;ans&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"suanfa/dfs/#httpswwwluogucomcnproblemp1219","title":"https://www.luogu.com.cn/problem/P1219","text":"<p>\u8fd9\u9053\u9898\u76ee\u8981\u5199\u56de\u6eaf\u662f\u56e0\u4e3a\u53c2\u6570\u91cc\u4e0d\u5305\u542b\u88ab\u6539\u53d8\u7684\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u56de\u6eaf\u4ee5\u8fbe\u5230\u80fd\u591f\u8ba9dfs\u8fd4\u56de\u4e0a\u4e00\u7ea7\u7ee7\u7eed\u5bfb\u627e\u5176\u4ed6\u53ef\u80fd\u6027</p> <pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#include&lt;bits/stdc++.h&gt;\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nvector&lt;int&gt; lie(169),shun(169),ni(169),ans(169);\nint n;\nint check=1,sum=0;\nvoid change(int x,int y,int num){\n    ans[x]=y;\n    lie[y]=num;\n    shun[x+y]=num;\n    ni[(x-y)+n]=num;\n}\nvoid dfs(int i,int n){\n    if(i&gt;n){\n        if(check&lt;=3){\n            for(int c=1;c&lt;=n;c++){\n                cout&lt;&lt;ans[c]&lt;&lt;\" \";\n            }\n            cout&lt;&lt;endl;\n            check++;\n        }\n        sum++;\n        return ;\n    }\n    for(int j=1;j&lt;=n;j++){\n        if(lie[j]||shun[i+j]||ni[(i-j)+n]) continue;\n        change(i,j,1);\n        dfs(i+1,n);\n        change(i,j,0);\n    }\n}\nint main(){\n    cin&gt;&gt;n;\n    dfs(1,n);\n    cout&lt;&lt;sum&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"suanfa/dj/","title":"\u8fea\u6770\u65af\u7279\u62c9","text":"<p>\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u6bcf\u6b21\u9009\u62e9\u5f53\u524d\u80fd\u9009\u62e9\u7684\u6743\u503c\u6700\u5c0f\u7684\u70b9\uff0c\u7136\u540e\u627e\u5b83\u7684\u90bb\u63a5\u70b9\uff0c\u4ece\u90bb\u63a5\u70b9\u91cc\u63a5\u7740\u627e\u6700\u5c0f\u7684\uff0c\u5faa\u73af\u4e0b\u53bb\uff0c\u76f4\u5230\u6240\u6709\u70b9\u7684\u6700\u5c0f\u503c\u90fd\u5df2\u7ecf\u786e\u7acb</p> <p>https://atcoder.jp/contests/abc362/tasks/abc362_d</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define INF 1061109567\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    int n,m;\n    cin&gt;&gt;n&gt;&gt;m;\n    vector&lt;ll&gt; a(n);\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;a[i];\n    }\n    vector&lt;ll&gt; b(m),u(m),v(m);\n    for(int i=0;i&lt;m;i++){\n        cin&gt;&gt;u[i]&gt;&gt;v[i]&gt;&gt;b[i];\n        u[i]--,v[i]--;\n    }\n    vector&lt;vector&lt;pair&lt;ll,ll&gt;&gt;&gt; table(n);\n    for(int i=0;i&lt;m;i++){\n        table[u[i]].pb({v[i],b[i]});\n        table[v[i]].pb({u[i],b[i]});\n    }\n    priority_queue&lt;pair&lt;ll,ll&gt;,vector&lt;pair&lt;ll,ll&gt;&gt;,greater&lt;pair&lt;ll,ll&gt;&gt;&gt; pq;\n    vector&lt;ll&gt; dist(n,1e18);\n    dist[0]=a[0];\n    pq.push({dist[0],0});\n    while(!pq.empty()){\n        auto[d,u]=pq.top();\n        pq.pop();\n        if(d&gt;dist[u]) continue;\n        for(auto x:table[u]){\n            ll v=x.first;\n            ll newdis=x.second+dist[u]+a[v];\n            if(newdis&lt;dist[v]){\n                dist[v]=newdis;\n                pq.push({newdis,v});\n            }\n        }\n    }\n    for(int i=1;i&lt;n;i++){\n        cout&lt;&lt;dist[i]&lt;&lt;\" \";\n    }\n    cout&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>https://www.luogu.com.cn/problem/P4779</p> <p>https://www.luogu.com.cn/problem/P3905</p> <p>\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\u6ce8\u610f\u4e8b\u9879</p> <p>\u7b2c\u4e00\u662f\u5bf9\u4e8e\u65e0\u5411\u56fe\uff0c\u6211\u4eec\u5728\u90bb\u63a5\u8868\u5b58\u56fe\u7684\u65f6\u5019\u8981\u53cc\u5411\u5b58\u5165\uff0c1\u52302\u5b58\u4e00\u904d\uff0c2\u52301\u4e5f\u8981\u5b58\u4e00\u904d</p> <p>\u7b2c\u4e8c\u662f\u5728\u521b\u7acbdist\u6570\u7ec4\u5b58\u7b54\u6848\u7684\u65f6\u5019\uff0c\u8981\u5148\u5c06\u5176\u5185\u7684\u5143\u7d20\u8d4b\u503c\u4e3a\u4e00\u4e2a\u5f88\u5927\u7684\u6570\uff0c\u518d\u5bf9\u8d77\u70b9\u8fdb\u884c\u5355\u72ec\u8d4b\u503c\uff0c\u5982\u679c\u6709\u70b9\u6743\uff0c\u8d77\u70b9\u8d4b\u503c\u4e3a\u70b9\u6743\uff0c\u5426\u5219\u4e3a0</p> <p>\u7b2c\u4e09\u662f\u5728\u7b97\u6cd5\u7684\u6838\u5fc3\u90e8\u5206\u5f53\u73b0\u5728\u6240\u9009\u62e9\u7684\u70b9\u662f\u6700\u5c0f\u503c\u8fdb\u5165\u627e\u90bb\u8fb9\u548c\u90bb\u70b9\u7684\u65f6\u5019\uff0c\u5230\u90bb\u63a5\u70b9\u7684\u6743\u503c\u5728\u8d4b\u503c\u65f6\u52a0\u7684\u662f\u4e4b\u524d\u8def\u5f84\u7684\u6743\u503c\u548c\uff0c\u5373dist[u]</p>"},{"location":"suanfa/erfen/","title":"\u4e8c\u5206\u67e5\u627e","text":"<p>https://www.bilibili.com/video/BV1np421o77o/?spm_id_from=333.1007.0.0&amp;vd_source=e3dc19eb700a416c04efe110fff16163</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nbool check(int x){\n    ......\n}\nint main(){\n    int l=1,r=n+1;\n    while(l&lt;r){\n        int mid=(l+r)&gt;&gt;1;\n        if(check(mid)){\n            r=mid;\n        }\n        else{\n            l=mid+1;\n        }\n    }\n    cout&lt;&lt;l&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"suanfa/gaojingdu/","title":"\u9ad8\u7cbe\u5ea6\u7b97\u6cd5","text":""},{"location":"suanfa/gaojingdu/#_2","title":"\u52a0\u6cd5\u4ee3\u7801","text":"<pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#include&lt;bits/stdc++.h&gt;\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    string a,b;\n    cin&gt;&gt;a&gt;&gt;b;\n    vector&lt;int&gt; A,B;\n    for(int i=a.size()-1;i&gt;=0;i--){\n        A.pb(a[i]-'0');\n    }\n    for(int i=b.size()-1;i&gt;=0;i--){\n        B.pb(b[i]-'0');\n    }\n    int len=max(A.size(),B.size()),mi=min(A.size(),B.size());\n    vector&lt;int&gt; ans;\n    for(int i=0;i&lt;len;i++){\n        if(i&lt;=mi-1){\n            ans.pb(A[i]+B[i]);\n        }\n        else{\n            if(A.size()==len) ans.pb(A[i]);\n            else ans.pb(B[i]);\n        }\n    }\n    for(int i=0;i&lt;ans.size()-1;i++){\n        if(ans[i]&gt;=10){\n            ans[i]=ans[i]%10;\n            ans[i+1]++;\n        }\n    }\n    for(int i=ans.size()-1;i&gt;=0;i--){\n        cout&lt;&lt;ans[i];\n    }\n    cout&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"suanfa/gaojingdu/#_3","title":"\u51cf\u6cd5\u4ee3\u7801","text":"<pre><code>/*\n   (\uff61\uff65\u03c9\uff65\uff61)\uff89\u2661  \u6211\u559c\u6b22\u65af\u5361\u8482\u554a\uff0c\u6211\u559c\u6b22\u6d41\u8424\u554a\n*/\n#include&lt;bits/stdc++.h&gt;\n#define INF 1e18\n#define pb push_back\n#define ll long long\nusing namespace std;\nint main(){\n    string a,b;\n    cin&gt;&gt;a&gt;&gt;b;\n    string mx,mi;\n    bool fuhao=false;\n    if(a.size()&gt;b.size()){\n        mx=a;\n        mi=b;\n    }\n    else if(a.size()&lt;b.size()){\n        mx=b;\n        mi=a;\n        fuhao=true;\n    }\n    else{\n        bool ok=false;\n        for(int i=0;i&lt;a.size();i++){\n            if(a[i]&gt;b[i]){\n                mx=a;\n                mi=b;\n                ok=true;\n                break;\n            }\n            else if(a[i]&lt;b[i]){\n                mx=b;\n                mi=a;\n                ok=true;\n                fuhao=true;\n                break;\n            }\n        }\n        if(!ok){\n            cout&lt;&lt;0&lt;&lt;endl;\n            return 0;\n        }\n    }\n    vector&lt;int&gt; MX,MI;\n    for(int i=mx.size()-1;i&gt;=0;i--){\n        MX.pb(mx[i]-'0');\n    }\n    for(int i=mi.size()-1;i&gt;=0;i--){\n        MI.pb(mi[i]-'0');\n    }\n    vector&lt;int&gt; ans;\n    for(int i=0;i&lt;MX.size();i++){\n        if(i&lt;=MI.size()-1){\n            if(MX[i]&gt;=MI[i]){\n                ans.pb(MX[i]-MI[i]);\n            }\n            else{\n                ans.pb(MX[i]+10-MI[i]);\n                if(MX[i+1]!=0) MX[i+1]--;\n                else{\n                    MX[i+1]=9;\n                    for(int j=i+2;j&lt;MX.size();j++){            // 1009\n                        if(MX[j]!=0){\n                            MX[j]--;\n                            break;\n                        }\n                        else{\n                            MX[j]=9;\n                        }\n                    }\n                }\n            }\n           // cout&lt;&lt;ans[i]&lt;&lt;endl;\n        }\n        else{\n            ans.pb(MX[i]);\n        }\n    }\n    if(fuhao){\n        cout&lt;&lt;'-';\n    }\n    bool qiandao=false;\n    for(int i=ans.size()-1;i&gt;=0;i--){\n        if(!ans[i]&amp;&amp;!qiandao) continue;\n        else{\n            qiandao=true;\n            cout&lt;&lt;ans[i];\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"suanfa/gaojingdu/#_4","title":"\u4e58\u6cd5\u4ee3\u7801","text":"<pre><code>#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#include&lt;cstdio&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nchar a1[10001],b1[10001];\nint a[10001],b[10001],i,x,len,j,c[10001];\nint main ()\n{\n    cin&gt;&gt;a1&gt;&gt;b1;//\u4e0d\u89e3\u91ca\uff0c\u4e0d\u61c2\u770b\u524d\u9762\n    int lena=strlen(a1);//\u6bcf\u4e2a\u90e8\u5206\u90fd\u5f88\u6e05\u695a\n    int lenb=strlen(b1);//\u8fd9\u53ea\u662f\u65b9\u4fbf\u4f60\u4eec\u590d\u5236\n    for(i=1;i&lt;=lena;i++)a[i]=a1[lena-i]-'0';\n    for(i=1;i&lt;=lenb;i++)b[i]=b1[lenb-i]-'0';\n    for(i=1;i&lt;=lenb;i++)\n    for(j=1;j&lt;=lena;j++)\n    c[i+j-1]+=a[j]*b[i];\n    for(i=1;i&lt;lena+lenb;i++)\n    if(c[i]&gt;9)\n    {\n        c[i+1]+=c[i]/10;\n        c[i]%=10;\n    }\n    len=lena+lenb;\n    while(c[len]==0&amp;&amp;len&gt;1)len--;\n    for(i=len;i&gt;=1;i--)cout&lt;&lt;c[i];\n    return 0;\n}\n</code></pre>"},{"location":"%E7%8A%AF%E7%97%85/%E7%AC%91%E5%98%BB%E4%BA%86/","title":"\u8fd9\u91cc\u662fc++stl\u7684\u76f8\u5173\u77e5\u8bc6\u8bb0\u5f55","text":""},{"location":"%E7%8A%AF%E7%97%85/%E7%AC%91%E5%98%BB%E4%BA%86/#comparestl","title":"\u5e26\u6709\"compare\"\u8fd9\u4e2a\u6a21\u677f\u53c2\u6570\u7684stl\u5bb9\u5668","text":"<p>\u5e38\u89c1\u7684\u6709</p> <p>1.priority_queue</p> <p>2.set</p> <p>3.map</p>"},{"location":"%E7%8A%AF%E7%97%85/%E7%AC%91%E5%98%BB%E4%BA%86/#_1","title":"\u4f7f\u7528\u7ed3\u6784\u4f53\u6765\u81ea\u5b9a\u4e49\u8fd9\u4e9b\u5bb9\u5668\u7684\u6392\u5e8f\u65b9\u5f0f","text":"<p>\u4ee5priority_queue\u4e3a\u4f8b</p> <pre><code>struct Compare {\n    bool operator()(const pair&lt;int, int&gt;&amp; a, const pair&lt;int, int&gt;&amp; b) {\n        return a.first &gt; b.first;  // \u5982\u679c a.first &gt; b.first\uff0c\u8fd4\u56de true\uff0c\u8868\u793a a \u6392\u5728 b \u540e\u9762\n    }\n};\n// \u4e0a\u9762\u4e3a\u6392\u5e8f\u7684\u5199\u6cd5\uff0c\u4e0b\u9762\u4e3a\u4f8b\u5b50\u4e2d\u7684\u4f18\u5148\u961f\u5217\u5b9a\u4e49\u65b9\u5f0f\npriority_queue&lt;pair&lt;int, int&gt;, vector&lt;pair&lt;int, int&gt;&gt;, Compare&gt; pq;\n</code></pre>"}]}